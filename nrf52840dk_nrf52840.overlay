/ {
    compatible = "nordic,nrf52840-dk-nrf52840";

    chosen {
        /* Only one display can be chosen at a time */
        // zephyr,display = &ssd1306;  // I2C OLED display (commented out)
        zephyr,display = &ili9341;    // SPI TFT display (active)
        zephyr,rtc = &rtc0;           // Use RTC0 as the real-time clock
    };

    aliases {
        max30101 = &max30101;         // Alias for MAX30101 pulse oximeter
        bmi160 = &bmi160;             // Alias for BMI160 IMU
    };

    zephyr,user {
        io-channels = <&adc 0>, <&adc 1>; // ADC channels for user input
    };
};

/* I2C0 Configuration (for BMI160, MAX30101, SSD1306) */
&i2c0 {
    status = "okay";
    pinctrl-0 = <&i2c0_default>;      // Default pin configuration
    pinctrl-1 = <&i2c0_sleep>;        // Low-power/sleep pin configuration
    pinctrl-names = "default", "sleep";
    clock-frequency = <I2C_BITRATE_FAST>; // Fast I2C (400kHz)

    /* BMI160 IMU sensor */
    bmi160: bmi160@69 {
        compatible = "bosch,bmi160";
        reg = <0x69>;                 // I2C address
        label = "BMI160";
        int-gpios = <&gpio0 23 GPIO_ACTIVE_HIGH>; // Interrupt pin
    };

    /* MAX30101 Pulse Oximeter sensor */
    max30101: max30101@57 {
        compatible = "maxim,max30101";
        reg = <0x57>;                 // I2C address
        label = "MAX30101";
    };

    /* SSD1306 OLED Display */
    ssd1306: ssd1306@3c {
        compatible = "solomon,ssd1306fb";
        reg = <0x3c>;                 // I2C address
        label = "SSD1306";
        width = <128>;
        height = <64>;
        segment-offset = <0>;
        page-offset = <0>;
        display-offset = <0>;
        multiplex-ratio = <63>;
        segment-remap;
        com-invdir;
        prechargep = <0x22>;
        reset-gpios = <&gpio0 22 GPIO_ACTIVE_LOW>; // Reset pin
    };
};

/* SPI1 Configuration for ILI9341 TFT display */
&spi1 {
    status = "okay";
    cs-gpios = <&gpio0 29 GPIO_ACTIVE_LOW>; // Chip select pin
    pinctrl-0 = <&spi1_default>;            // Default pin configuration
    pinctrl-1 = <&spi1_sleep>;              // Low-power/sleep pin configuration
    pinctrl-names = "default", "sleep";
};

/ {
    /* MIPI DBI/ILI9341 Configuration */
    mipi_dbi {
        compatible = "zephyr,mipi-dbi-spi";
        dc-gpios = <&gpio0 13 GPIO_ACTIVE_HIGH>;   // Data/Command pin
        reset-gpios = <&gpio0 28 GPIO_ACTIVE_LOW>; // Reset pin
        write-only;
        #address-cells = <1>;  // Only 1 address cell (typical for SPI devices)
        #size-cells = <0>;     // No size needed (common for simple SPI devices)
        spi-dev = <&spi1>;     // SPI bus to use

        ili9341: ili9341@0 {
            compatible = "ilitek,ili9341";
            reg = <0>;                     // SPI chip select 0
            mipi-max-frequency = <4000000>; // Max SPI frequency (4 MHz)
            width = <240>;
            height = <320>;
            rotation = <180>;              // Display rotation
            pixel-format = <1>;            // RGB565
        };
    };
};

/* Pin Control Definitions */
&pinctrl {
    /* I2C0 Pins (SDA: P0.26, SCL: P0.27) */
    i2c0_default: i2c0_default {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 26)>, // SDA pin
                    <NRF_PSEL(TWIM_SCL, 0, 27)>; // SCL pin
            bias-pull-up;                        // Enable pull-up resistors
        };
    };

    i2c0_sleep: i2c0_sleep {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 26)>, // SDA pin
                    <NRF_PSEL(TWIM_SCL, 0, 27)>; // SCL pin
            low-power-enable;                    // Enable low-power mode
        };
    };

    /* SPI1 Pins (SCK: P0.31, MOSI: P0.30) */
    spi1_default: spi1_default {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 31)>, // SCK pin
                    <NRF_PSEL(SPIM_MOSI, 0, 30)>; // MOSI pin
        };
    };

    spi1_sleep: spi1_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 31)>, // SCK pin
                    <NRF_PSEL(SPIM_MOSI, 0, 30)>; // MOSI pin
            low-power-enable;                    // Enable low-power mode
        };
    };
};

/* RTC Configuration */
&rtc0 {
    status = "okay";
    compatible = "nordic,nrf-rtc";
    clock-frequency = <32768>; // 32.768 kHz crystal
};